local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local GuiService = game:GetService("GuiService")

local highlight = Instance.new("Highlight")
highlight.Name = "Highlight"

local highlightEnabled = false
local useTeamColor = true  -- Usar a cor da equipe por padrão
local espColor = Color3.new(1, 1, 1)

local function getHighlightColor(player)
    return useTeamColor and getTeamColor(player) or espColor
end

local function updateHighlightColor(player)
    local highlightInstance = player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight")
    if highlightInstance then
        highlightInstance.Color3 = getHighlightColor(player)
    end
end

local function createOrUpdateHighlight(player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local highlightClone = player.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight")
        if not highlightClone then
            highlightClone = highlight:Clone()
            highlightClone.Adornee = player.Character:FindFirstChild("HumanoidRootPart")
            highlightClone.Parent = player.Character:FindFirstChild("HumanoidRootPart")
            highlightClone.Name = "Highlight"
            highlightClone.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        end
        highlightClone.Color3 = getHighlightColor(player)
    end
end

local function removeHighlight(player)
    local highlightInstance = player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight")
    if highlightInstance then
        highlightInstance:Destroy()
    end
end

local function toggleCallback(value)
    highlightEnabled = value
    if highlightEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            createOrUpdateHighlight(player)
        end
    else
        for _, player in pairs(Players:GetPlayers()) do
            removeHighlight(player)
        end
    end
end

local function colorDropdownCallback(value)
    if value == "Team Color" then
        useTeamColor = true
    else
        useTeamColor = false
        espColor = value
    end
    if highlightEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            updateHighlightColor(player)
        end
    end
end

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local espColors = {
    "Team Color",  -- Adiciona a opção para usar a cor da equipe
    Color3.new(1, 0, 0),
    Color3.new(0, 1, 0),
    Color3.new(0, 0, 1),
    Color3.new(1, 1, 0),
    Color3.new(1, 0, 1),
}

local dropdown = Instance.new("DropDownMenu")
dropdown.Name = "EspColorDropdown"
dropdown.Parent = playerGui

for _, color in pairs(espColors) do
    dropdown:AddOption(color, function()
        colorDropdownCallback(color)
    end)
end

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        if highlightEnabled then
            createOrUpdateHighlight(player)
        end
    end)
end)

Players.PlayerRemoving:Connect(function(player)
    removeHighlight(player)
end)

RunService.Heartbeat:Connect(function()
    if highlightEnabled then
        for _, player in pairs(Players:GetPlayers()) do
            updateHighlightColor(player)
        end
    end
end)